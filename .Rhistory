setwd("~/Github/Syspop")
renv::init()
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
global_vars$test_data_catalog
data_catalog <- read.csv(global_vars$test_data_catalog)
View(data_catalog)
source("~/Github/Syspop/syspop/run_nz.R")
data_catalog <- read.csv(global_vars$test_data_catalog)
View(data_catalog)
data_catalog <- read.csv(global_vars$test_data_catalog, header = FALSE, col.names = c("data_type", "data_subtype1", "data_subtype2", "data_path"))
View(data_catalog)
install.packages("arrow")
View(data_catalog)
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/r/utils.R")
row
file_path <- row$data_path
file_path
data <- read_parquet(file_path)
data
row
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
is.na(row$data_type1)
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
if (!is.na(row$data_type1)) {
name <- paste0(row$data_type, "/", row$data_type1, "/", row$data_type2)
} else {
name <- paste0(row$data_type, "/", row$data_type2)
}
paste0(row$data_type, "/", row$data_type1, "/", row$data_type2)
is.na(row$data_type1)
paste0(row$data_type, "/", row$data_type2)
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
View(global_vars)
source("~/Github/Syspop/syspop/run_nz.R")
!is.na(row$data_type1)
row$data_type1
if (!is.na(row$data_type1))
{}
if (!is.null(row$data_type1))
{}
is.null(row$data_type1)
source("~/Github/Syspop/syspop/run_nz.R")
output_list
View(output_list)
output_list
typeof(output_list)
str(output_list)
output_list%population
View(data_catalog)
output_list%pop_data
source("~/Github/Syspop/syspop/run_nz.R")
data
name
data
x <- list(name = data)
x
View(x)
x$name
name
name
x$pop_data/
x$pop_data
x <- list(name = data)
x$pop_data
my_list <- list()
my_list[[name]] <- data
my_list
View(my_list)
my_list$pop_data
source("~/Github/Syspop/syspop/run_nz.R")
output_list
output_list$pop_data
View(output_list)
output_list[0]
output_list[1]
output_list[1]$pop_data
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
test_data
test_data$pop_data
test_data$llm_diary_data
test_data$llm_diary_data$data
test_data$llm_diary_data$percentage
View(data_catalog)
test_data$percentage$llm_diary_data
test_data$llm_diary_data$student
test_data$llm_diary_data
source("~/Github/Syspop/syspop/run_nz.R")
paste0(row$data_type, "/", row$data_type2)
data_type
row
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
row$data_type1
row
source("~/Github/Syspop/syspop/run_nz.R")
test_data
test_data$`llm_diary_data/percentage/retiree`
test_data$`geog_data//hierarchy`
source("~/Github/Syspop/syspop/run_nz.R")
renv::snapshot()
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
setwd("~/Github/Syspop")
source("~/Github/Syspop/syspop/run_nz.R")
test_data
test_data$pop_data$gender
test_data$`pop_data//gender`
test_data$`pop_data//ethnicity`
test_data$`geog_data//location`
source("~/Github/Syspop/syspop/run_nz.R")
test_data$`geog_data//location`
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
pop_gender
check_dependencies("base_pop", c("pop_gender", "pop_ethnicity", "syn_areas"), c())
pop_gender
source("~/Github/Syspop/syspop/run_nz.R")
base_pop
pop_gender
check_dependencies("base_pop", c("pop_gender", "pop_ethnicity", "syn_areas"), c())
pop_gender
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/syspop.R")
source("~/Github/Syspop/syspop/syspop.R")
source("~/Github/Syspop/syspop/run_nz.R")
key_item
deps_list
eval(as.name(item_to_check))
eval(as.name("pop_gender"))
deps_list
deps_list[0]
deps_list[1]
source("~/Github/Syspop/syspop/run_nz.R")
deps_list[1]
deps_list
source("~/Github/Syspop/syspop/run_nz.R")
c(pop_gender, pop_ethnicity, syn_areas)
syn_areas
syn_areas <- c(241200,)
syn_areas <- c(241200)
source("~/Github/Syspop/syspop/run_nz.R")
c(pop_gender, pop_ethnicity, syn_areas)
source("~/Github/Syspop/syspop/syspop.R")
source("~/Github/Syspop/syspop/syspop.R")
source("~/Github/Syspop/syspop/syspop.R")
source("~/Github/Syspop/syspop/syspop.R")
source("~/Github/Syspop/syspop/syspop.R")
deps_list[0]
deps_list[1]
is.null(eval(as.name(item_to_check)))
item_to_check = deps_list[1]
is.null(eval(as.name(item_to_check)))
item_to_check
is.null(item_to_check)
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
df_gender_melt
View(df_gender_melt)
df_gender_meltdf_gender_melt %>%
filter(area == output_area, age == age) %>%
select(gender, prob, count)
df_gender_melt %>%
filter(area == output_area, age == age) %>%
select(gender, prob, count)
renv::restore()
renv::install("dplyr")
renv::snapshot()
source("~/Github/Syspop/syspop/run_nz.R")
df_gender_melt %>%
filter(area == output_area, age == age) %>%
select(gender, prob, count)
df_gender_melt
View(df_gender_melt)
age
renv::install(c("log4r", "lubridate", "tidyr"))
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
gender_data
ethnicity_data
output_area_filter
x <- gender_data %>% filter(area %in% output_area_filter)
View(x)
gender_data
df_gender_melt <- gender_data %>%
pivot_longer(cols = -c(area, gender), names_to = "age", values_to = "count")
View(df_gender_melt)
x <- df_gender_melt %>%
group_by(area, age) %>%
mutate(prob = count / sum(count))
View(x)
View(df_gender_melt)
View(x)
for (i in seq_along(output_areas)) {
log4r::log.info(paste0("Base population: ", i, "/", total_output_area, " (", round(i * 100 / total_output_area, 2), "%)"))
for (age in unique(df_gender_melt$age)) {
result <- create_base_pop(output_areas[i], age, df_gender_melt, df_ethnicity_melt, ref_population = ref_population)
results <- c(results, result)
}
}
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
df_gender_melt
df_gender_melt$age
unique(df_gender_melt$age)
ref_population
output_areas[i]
source("~/Github/Syspop/syspop/run_nz.R")
age
df_gender_melt
df_gender_melt %>%
filter(area == output_area, age == age) %>%
select(gender, prob, count)
df_gender_melt
age
gender_probs <- df_gender_melt %>%
filter(area == output_area, age == age) %>%
select(gender, prob, count)
df_gender_melt
df_gender_melt$age
df_gender_melt %>%
filter(area == output_area, age == age)
df_gender_melt %>%
filter(area == output_area, age == "1")
age
age[1]
age[0]
age[3]
age[1]
df_gender_melt %>%
filter(area == output_area, age == age[1])
output_area
source("~/Github/Syspop/syspop/run_nz.R")
df_gender_melt %>%
filter(area == output_area, age == output_age) %>%
select(gender, prob, count)
source("~/Github/Syspop/syspop/run_nz.R")
ethnicity_probs
ref_population
gender_probs
n_individuals
sample(gender_probs$gender, size = n_individuals, prob = gender_probs$prob, replace = TRUE)
sample(gender_probs$gender, size = n_individuals, prob = gender_probs$prob, replace = TRUE)
sample(gender_probs$gender, size = n_individuals, prob = gender_probs$prob, replace = TRUE)
sample(gender_probs$gender, size = n_individuals, prob = gender_probs$prob, replace = TRUE)
sample(gender_probs$gender, size = n_individuals, prob = gender_probs$prob, replace = TRUE)
data.frame(
area = rep(output_area, n_individuals),
age = rep(age, n_individuals),
gender = genders,
ethnicity = ethnicities
)
data.frame(
area = rep(output_area, n_individuals),
age = rep(output_age, n_individuals),
gender = genders,
ethnicity = ethnicities
)
source("~/Github/Syspop/syspop/run_nz.R")
results
population <- unlist(results)
population
output_df <- data.frame(population)
View(output_df)
results
results[1]
results[2]
result
source("~/Github/Syspop/syspop/run_nz.R")
population
source("~/Github/Syspop/syspop/run_nz.R")
result
results
results <- c(results, result)
results
results[1]
results
result
typeof(results)
library(purrr)
results <- list()
results%>% append(result)
results
results[1]
result
typeof(result)
df <- data.frame(result)
df
typeof(df)
results <- list()
results%>% append(df)
typeof(df)
library(data.table)
renv::install("data.table")
library(data.table)
install.packages("data.table")
library(data.table)
df = as.data.table(result)
df
typeof(df)
result
result <- append(result, result)
result
typeof(result)
result[1]
result[2]
View(df)
typeof(gender_data)
do.call(rbind.data.frame, gender_data)
x<-do.call(rbind.data.frame, gender_data)
View(x)
View(df)
df
result_df <- rbind(df, df)
View(result_df)
source("~/Github/Syspop/syspop/run_nz.R")
population
View(population)
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
renv::snapshot()
debugSource("~/Github/Syspop/syspop/run_nz.R")
test_data$`geog_data//hierarchy`
test_data$`geog_data//hierarchy`$area
unique(test_data$`geog_data//hierarchy`$area)
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
df_ethnicity_melt %>%
filter(area == output_area, age == output_age) %>%
select(ethnicity, prob, count)
df_gender_melt %>%
filter(area == output_area, age == output_age) %>%
select(gender, prob, count)
View(population)
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
test_data$`geog_data//hierarchy`
syn_areas <- test_data$geog_data$hierarchy %>%
filter(region == "Wellington") %>%
pull(area)
syn_areas <- test_data$`geog_data//hierarchy` %>%
filter(region == "Wellington") %>%
pull(area)
syn_areas
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
