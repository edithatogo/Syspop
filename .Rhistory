adult_ids
children_ids <- tryCatch({
sample(unassigned_children$index[unassigned_children$ethnicity == adult_ids$ref_ethnicity],
proc_household_composition$children[1])
}, error = function(e) {
sample(unassigned_children$index, proc_household_composition$children[1])
})
children_ids
children_ids
proc_base_pop
adult_ids
length(adult_ids)
source("~/Github/Syspop/syspop/run_nz.R")
adult_ids
ref_adult
ref_adult$index
ref_adult$index
ref_adult
source("~/Github/Syspop/syspop/run_nz.R")
proc_base_pop
source("~/Github/Syspop/syspop/run_nz.R")
population
seq_len(nrow(population))
population$index <- seq_len(nrow(population))
population
source("~/Github/Syspop/syspop/run_nz.R")
unassigned_adults
proc_household_composition
unique_base_pop_ethnicity
unassigned_adults
adult_ids
children_ids
source("~/Github/Syspop/syspop/run_nz.R")
proc_base_pop
adult_ids
proc_adult
children_ids
proc_household_composition
proc_adult$adult_ids
proc_adult$adult_ids[1]
proc_adult$adult_ids[2]
proc_adult$adult_ids[3]
proc_adult$adult_ids[4]
length(proc_adult$adult_ids)
proc_adult
proc_adult[1]
proc_adult$adult_ids
unlist(proc_adult$adult_ids)
children_ids
proc_household_composition
source("~/Github/Syspop/syspop/run_nz.R")
adult_ids
children_ids
length(children_ids)
household_id
source("~/Github/Syspop/syspop/run_nz.R")
adult_ids
proc_base_pop$household[proc_base_pop$index %in% adult_ids] <- as.character(household_id)
View(proc_base_pop)
View(proc_base_pop)
adult_ids
source("~/Github/Syspop/syspop/run_nz.R")
adult_ids
proc_base_pop$household[proc_base_pop$index %in% adult_ids] <- as.character(household_id)
household_id
View(proc_base_pop)
View(proc_base_pop)
children_ids
children_ids
source("~/Github/Syspop/syspop/run_nz.R")
proc_household_composition
View(proc_base_pop)
proc_base_pop
proc_adult$adult_ids
View(proc_base_pop)
source("~/Github/Syspop/syspop/run_nz.R")
proc_base_pop
View(proc_base_pop)
source("~/Github/Syspop/syspop/run_nz.R")
View(proc_base_pop)
proc_base_pop
View(proc_base_pop)
length(adult_ids)
source("~/Github/Syspop/syspop/run_nz.R")
View(proc_base_pop)
View(proc_base_pop)
unassigned_adults
len(unassigned_adults)
adult_ids
unassigned_adults
View(proc_household_composition)
unassigned_adults
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
exclude_hhd_composition_indices
proc_household_composition
source("~/Github/Syspop/syspop/run_nz.R")
proc_household_compositionexclude_hhd_composition_indices
exclude_hhd_composition_indices
proc_household_composition
proc_household_dataset
proc_household_dataset
exclude_row_indices
proc_household_dataset$index.not_inexclude_row_indices
exclude_row_indices
proc_household_dataset[!proc_household_dataset$index %in% exclude_row_indices, ]
source("~/Github/Syspop/syspop/run_nz.R")
proc_household_composition
proc_household_composition
exclude_hhd_composition_indices
proc_household_composition$index
proc_household_composition
proc_household_dataset
proc_household_composition
proc_household_dataset
source("~/Github/Syspop/syspop/run_nz.R")
proc_base_pop
View(proc_base_pop)
unassigned_adults
unassigned_children
unique(proc_base_pop$household)
existing_households
unassigned_adults
unassigned_children
source("~/Github/Syspop/syspop/run_nz.R")
results
results[1]
results[2]
result_index
base_pop
proc_base_pop
result_index
base_pop
base_pop[base_pop$index %in% result_index, ] <- result
View(base_pop)
source("~/Github/Syspop/syspop/run_nz.R")
base_pop
geo_address_data
base_pop
source("~/Github/Syspop/syspop/run_nz.R")
base_pop
address_data
address_type
all_areas
proc_address_data
base_pop
proc_pop_data
address_type
unique(proc_pop_data[["household"]])
length(unique(proc_pop_data[["household"]]))
length((proc_pop_data[["household"]]))
source("~/Github/Syspop/syspop/run_nz.R")
start_time <- Sys.time()
all_areas <- unique(base_pop$area)
results <- list()
for (i in seq_along(all_areas)) {
proc_area <- all_areas[i]
message(sprintf("%d/%d: Processing %s", i, length(all_areas), proc_area))
proc_address_data <- address_data[address_data$area == proc_area, ]
area_type <- "area"
if (address_type == "company") {
area_type <- "area_work"
}
proc_pop_data <- base_pop[base_pop[[area_type]] == proc_area, ]
processed_address <- assign_place_to_address(address_type, proc_pop_data, proc_address_data, proc_area)
results[[i]] <- processed_address
}
results
source("~/Github/Syspop/syspop/run_nz.R")
results
results[1]
results[2]
processed_address
flattened_results <- do.call(c, results)
View(flattened_results)
flattened_results
proc_result
results_dict
View(results_dict)
results_dict
data.frame(results_dict)
source("~/Github/Syspop/syspop/run_nz.R")
results_df
View(results_df)
address_type
source("~/Github/Syspop/syspop/run_nz.R")
proc_address_data
source("~/Github/Syspop/syspop/run_nz.R")
base_address
proc_address_data
base_pop
base_address
source("~/Github/Syspop/syspop/run_nz.R")
base_address
View(base_address)
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
x
x$base_pop
x$base_address
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
output$base_pop
write_parquet(output$base_pop, file.path(tmp_dir, "syspop_base.parquet"))
tmp_dir
file.path(tmp_dir, "syspop_base.parquet")
output$base_pop
typeof(output$base_pop)
write_parquet(output$base_pop, file.path(tmp_dir, "syspop_base.parquet"))
base_pop <- read_parquet(file.path(tmp_dir, "syspop_base.parquet"))
base_pop
source("~/Github/Syspop/syspop/run_nz.R")
output$base_pop
write_parquet(output$base_address, file.path(tmp_dir, "syspop_location.parquet"))
source("~/Github/Syspop/syspop/run_nz.R")
output$base_pop
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
deps_list
item_to_check
deps_list[3]
deps_list[4]
deps_list
deps_list[3]
deps_list[5]
deps_list[100]
x <- c(1,2,3,)
x
x <- c(1,2,3)
x
x <- c(1,2,3,c(44,55,66))
x
x <- c(1,2,3,c(44,55,66,c))
x
x <- c(1,2,3,c(44,55,66))
x
x[3]
x[4]
x[[4]]
x <- list(c(1,2,3,c(44,55,66)))
x[4]
x[[4]
]
x[[1]]
x <- list(1, 2, 3, c(44, 55, 66))
x[[4]]
x
source("~/Github/Syspop/syspop/run_nz.R")
deps_list
deps_list[1]
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
item_to_check
item_to_check
item_to_check
key_item
item_to_check
key_item
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
renv::snapshot()
renv::restore()
debugSource("~/Github/Syspop/syspop/run_nz.R")
test_data$`commute_data//travel_to_work`
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
base_pop
base_address
View(base_address)
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
employer_data
employee_data
pop_data$area
pop_data
source("~/Github/Syspop/syspop/run_nz.R")
pop_data
all_areas
commute_data
all_commute_data
proc_employer_data
proc_employee_data
all_commute_data <- append(all_commute_data, list(proc_commute_data))
all_commute_data
source("~/Github/Syspop/syspop/run_nz.R")
employer_input
employer_input
i
employer_input[1,]
employer_num_factor
proc_employer_num
seq_len(proc_employer_num)
employers
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
all_employers[[proc_area]]
proc_employer_data
source("~/Github/Syspop/syspop/run_nz.R")
all_commute_data <- do.call(rbind, all_commute_data)
View(all_commute_data)
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
pop_data
all_employees
View(employee_data)
View(all_employees)
proc_employee_data$employee_number)
proc_employee_data$employee_number
sum(proc_employee_data$employee_number)
proc_area
all_employees[[237200]]
x <- list()
x$xx <- 3
x
source("~/Github/Syspop/syspop/run_nz.R")
all_employers
proc_area
all_employers$proc_area[1]
proc_area[1]
source("~/Github/Syspop/syspop/run_nz.R")
proc_area
all_employers$237200
all_employers[[237200]]
all_employees[[237200]]
source("~/Github/Syspop/syspop/run_nz.R")
base_pop
work_age$min
travel_methods
travel_methods
working_age_people
proc_working_age_people <- working_age_people[working_age_people$area == proc_home_area, ]
View(proc_working_age_people)
proc_working_age_people <- proc_working_age_people[
sample(nrow(proc_working_age_people),
min(nrow(proc_working_age_people), all_employees[[proc_home_area]])), ]
proc_working_age_people
proc_working_age_people
proc_working_age_people <- assign_people_between_home_and_work(
proc_working_age_people,
commute_dataset,
proc_home_area,
travel_methods
)
proc_working_age_people
View(proc_working_age_people)
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
commute_dataset
proc_home_area
proc_commute_dataset_work_areas
proc_working_age_people_in_work_area <- split_people(
proc_working_age_people,
proc_commute_dataset,
travel_methods
)
View(proc_working_age_people_in_work_area)
travel_methods
df
df_commute
proc_commute_datasets_total_people
fractions
proc_commute_datasets_total_people
proc_commute_datasets_total_people
df_commute
sum(df_commute[i, travel_methods])
sum(df_commute[1, travel_methods])
sample_df
df
remaining_df
split_dfs
split_dfs
split_dfs[1]
split_dfs[2]
proc_work_area
proc_working_age_people_in_work_area[1]
proc_commute
proc_people
proc_people
seq_len(nrow(proc_working_age_people_in_work_area[[i]]))
proc_people
proc_working_age_people
proc_working_age_people
proc_working_age_people
proc_people
proc_working_age_people
proc_people
proc_people$index
source("~/Github/Syspop/syspop/run_nz.R")
proc_working_age_people
proc_people
proc_people$index
View(proc_working_age_people)
View(proc_working_age_people)
source("~/Github/Syspop/syspop/run_nz.R")
View(proc_working_age_people)
source("~/Github/Syspop/syspop/run_nz.R")
results
results[1]
results[2]
x <- results[2]
View(results)
View(x)
x
result
View(result)
View(result)
View(base_pop)
source("~/Github/Syspop/syspop/run_nz.R")
View(result)
View(result)
proc_working_age_people
View(proc_working_age_people)
source("~/Github/Syspop/syspop/run_nz.R")
View(base_pop)
source("~/Github/Syspop/syspop/run_nz.R")
proc_row
source("~/Github/Syspop/syspop/run_nz.R")
proc_row$area_work
typeof(proc_row)
source("~/Github/Syspop/syspop/run_nz.R")
proc_row
proc_row$area_work
source("~/Github/Syspop/syspop/run_nz.R")
base_pop[i, ]
source("~/Github/Syspop/syspop/run_nz.R")
proc_row
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
proc_row
base_pop[base_pop$index == proc_row$index, ] <- proc_row
base_pop
proc_row$index
proc_row
base_pop$comapmy = NA
base_pop
base_pop[base_pop$index == proc_row$index, ] <- proc_row
base_pop
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
base_pop[base_pop$index == proc_row$index, ] <- proc_row
base_pop
proc_row
process_row(proc_row, employee_data, all_employers)
proc_row
source("~/Github/Syspop/syspop/run_nz.R")
proc_row
process_row(proc_row, employee_data, all_employers)
proc_row
proc_row$company <- process_row(proc_row, employee_data, all_employers)
proc_row
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
source("~/Github/Syspop/syspop/run_nz.R")
proc_row <- base_pop[i, ]
process_row(proc_row, employee_data, all_employers)
all_employers
employee_data
proc_row
proc_employee_data$business_code
proc_employee_data$employee_number_percentage
possible_work_sector
sample(
possible_employers[sapply(possible_employers, function(x) grepl(possible_work_sector, x))],
1
)
possible_employers
all_employers[[as.character(proc_area_work)]]
all_employers
proc_area_work
all_employers[236800]
all_employers[[236800]
]
all_employers[[as.character(proc_area_work)]]
possible_employers <- all_employers[[proc_area_work]]
possible_employers
output_employer <- sample(
possible_employers[sapply(possible_employers, function(x) grepl(possible_work_sector, x))],
1
)
output_employer
output_employer[1]
output_employer[1][1]
source("~/Github/Syspop/syspop/run_nz.R")
base_pop
View(base_pop)
process_row(proc_row, employee_data, all_employers)
proc_row
source("~/Github/Syspop/syspop/run_nz.R")
output_employer
as.character(output_employer)
source("~/Github/Syspop/syspop/run_nz.R")
View(base_pop)
source("~/Github/Syspop/syspop/run_nz.R")
geo_address_data
View(base_address)
source("~/Github/Syspop/syspop/run_nz.R")
result[[1]]
result[[2]]
result$base_pop
source("~/Github/Syspop/syspop/run_nz.R")
output$base_pop
output$base_address
renv::snapshot()
